// <auto-generated />
using System;
using FM_API.Persistance.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FM_API.Migrations
{
    [DbContext(typeof(FMContext))]
    partial class FMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FM_API.Entities.Estimaciones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Categoria")
                        .HasColumnType("text");

                    b.Property<long>("Id_gastos")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_ingresos")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_presupuesto")
                        .HasColumnType("bigint");

                    b.Property<int>("Plan")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id_presupuesto");

                    b.ToTable("estimaciones", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Gastos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("Id_gastos")
                        .HasColumnType("bigint");

                    b.Property<int>("Monto")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id_gastos");

                    b.ToTable("gastos", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Ingresos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("Id_ingresos")
                        .HasColumnType("bigint");

                    b.Property<int>("Monto")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id_ingresos");

                    b.ToTable("ingresos", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Presupuesto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Agno")
                        .HasColumnType("integer");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("presupuesto", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Rol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Rol_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("rol", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Transacciones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Categoria")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("Id_gastos")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_ingresos")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_presupuesto")
                        .HasColumnType("bigint");

                    b.Property<int>("Importe")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id_presupuesto");

                    b.ToTable("transacciones", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("Contrasegna")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Id_rol")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id_rol");

                    b.ToTable("usuario", "public");
                });

            modelBuilder.Entity("FM_API.Entities.Estimaciones", b =>
                {
                    b.HasOne("FM_API.Entities.Presupuesto", "Presupuesto")
                        .WithMany("Estimaciones")
                        .HasForeignKey("Id_presupuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("FM_API.Entities.Gastos", b =>
                {
                    b.HasOne("FM_API.Entities.Estimaciones", null)
                        .WithMany("Gastos")
                        .HasForeignKey("Id_gastos");

                    b.HasOne("FM_API.Entities.Transacciones", null)
                        .WithMany("Gastos")
                        .HasForeignKey("Id_gastos");
                });

            modelBuilder.Entity("FM_API.Entities.Ingresos", b =>
                {
                    b.HasOne("FM_API.Entities.Estimaciones", null)
                        .WithMany("Ingresos")
                        .HasForeignKey("Id_ingresos");

                    b.HasOne("FM_API.Entities.Transacciones", null)
                        .WithMany("Ingresos")
                        .HasForeignKey("Id_ingresos");
                });

            modelBuilder.Entity("FM_API.Entities.Transacciones", b =>
                {
                    b.HasOne("FM_API.Entities.Presupuesto", "Presupuesto")
                        .WithMany("Transacciones")
                        .HasForeignKey("Id_presupuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("FM_API.Entities.Usuario", b =>
                {
                    b.HasOne("FM_API.Entities.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("Id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("FM_API.Entities.Estimaciones", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("FM_API.Entities.Presupuesto", b =>
                {
                    b.Navigation("Estimaciones");

                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("FM_API.Entities.Transacciones", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Ingresos");
                });
#pragma warning restore 612, 618
        }
    }
}
